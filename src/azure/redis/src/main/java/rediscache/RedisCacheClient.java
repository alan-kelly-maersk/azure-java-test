// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package rediscache;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;

/**
 * Initializes a new instance of the RedisCacheClient type.
 */
public final class RedisCacheClient {
    /**
     * The ID of the target subscription.
     */
    private final String subscriptionId;

    /**
     * Gets The ID of the target subscription.
     * 
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /**
     * server parameter.
     */
    private final String host;

    /**
     * Gets server parameter.
     * 
     * @return the host value.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Api Version.
     */
    private final String apiVersion;

    /**
     * Gets Api Version.
     * 
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The Operations object to access its operations.
     */
    private final Operations operations;

    /**
     * Gets the Operations object to access its operations.
     * 
     * @return the Operations object.
     */
    public Operations getOperations() {
        return this.operations;
    }

    /**
     * The Redis object to access its operations.
     */
    private final Redis redis;

    /**
     * Gets the Redis object to access its operations.
     * 
     * @return the Redis object.
     */
    public Redis getRedis() {
        return this.redis;
    }

    /**
     * The FirewallRules object to access its operations.
     */
    private final FirewallRules firewallRules;

    /**
     * Gets the FirewallRules object to access its operations.
     * 
     * @return the FirewallRules object.
     */
    public FirewallRules getFirewallRules() {
        return this.firewallRules;
    }

    /**
     * The PatchSchedules object to access its operations.
     */
    private final PatchSchedules patchSchedules;

    /**
     * Gets the PatchSchedules object to access its operations.
     * 
     * @return the PatchSchedules object.
     */
    public PatchSchedules getPatchSchedules() {
        return this.patchSchedules;
    }

    /**
     * The LinkedServers object to access its operations.
     */
    private final LinkedServers linkedServers;

    /**
     * Gets the LinkedServers object to access its operations.
     * 
     * @return the LinkedServers object.
     */
    public LinkedServers getLinkedServers() {
        return this.linkedServers;
    }

    /**
     * The PrivateEndpointConnections object to access its operations.
     */
    private final PrivateEndpointConnections privateEndpointConnections;

    /**
     * Gets the PrivateEndpointConnections object to access its operations.
     * 
     * @return the PrivateEndpointConnections object.
     */
    public PrivateEndpointConnections getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }

    /**
     * The PrivateLinkResources object to access its operations.
     */
    private final PrivateLinkResources privateLinkResources;

    /**
     * Gets the PrivateLinkResources object to access its operations.
     * 
     * @return the PrivateLinkResources object.
     */
    public PrivateLinkResources getPrivateLinkResources() {
        return this.privateLinkResources;
    }

    /**
     * The AsyncOperationStatus object to access its operations.
     */
    private final AsyncOperationStatus asyncOperationStatus;

    /**
     * Gets the AsyncOperationStatus object to access its operations.
     * 
     * @return the AsyncOperationStatus object.
     */
    public AsyncOperationStatus getAsyncOperationStatus() {
        return this.asyncOperationStatus;
    }

    /**
     * The AccessPolicies object to access its operations.
     */
    private final AccessPolicies accessPolicies;

    /**
     * Gets the AccessPolicies object to access its operations.
     * 
     * @return the AccessPolicies object.
     */
    public AccessPolicies getAccessPolicies() {
        return this.accessPolicies;
    }

    /**
     * The AccessPolicyAssignments object to access its operations.
     */
    private final AccessPolicyAssignments accessPolicyAssignments;

    /**
     * Gets the AccessPolicyAssignments object to access its operations.
     * 
     * @return the AccessPolicyAssignments object.
     */
    public AccessPolicyAssignments getAccessPolicyAssignments() {
        return this.accessPolicyAssignments;
    }

    /**
     * Initializes an instance of RedisCacheClient client.
     * 
     * @param subscriptionId The ID of the target subscription.
     * @param host server parameter.
     * @param apiVersion Api Version.
     */
    RedisCacheClient(String subscriptionId, String host, String apiVersion) {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter(), subscriptionId, host, apiVersion);
    }

    /**
     * Initializes an instance of RedisCacheClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param subscriptionId The ID of the target subscription.
     * @param host server parameter.
     * @param apiVersion Api Version.
     */
    RedisCacheClient(HttpPipeline httpPipeline, String subscriptionId, String host, String apiVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), subscriptionId, host, apiVersion);
    }

    /**
     * Initializes an instance of RedisCacheClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param subscriptionId The ID of the target subscription.
     * @param host server parameter.
     * @param apiVersion Api Version.
     */
    RedisCacheClient(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter, String subscriptionId, String host,
        String apiVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.subscriptionId = subscriptionId;
        this.host = host;
        this.apiVersion = apiVersion;
        this.operations = new Operations(this);
        this.redis = new Redis(this);
        this.firewallRules = new FirewallRules(this);
        this.patchSchedules = new PatchSchedules(this);
        this.linkedServers = new LinkedServers(this);
        this.privateEndpointConnections = new PrivateEndpointConnections(this);
        this.privateLinkResources = new PrivateLinkResources(this);
        this.asyncOperationStatus = new AsyncOperationStatus(this);
        this.accessPolicies = new AccessPolicies(this);
        this.accessPolicyAssignments = new AccessPolicyAssignments(this);
    }
}
